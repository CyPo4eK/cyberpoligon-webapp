services:
  webapp:
    container_name: webapp
    restart: always
    environment:
    - PYTHONUNBUFFERED=1
    build: .
    networks: 
      - webapp
    image: webapp:latest
    ports:
      - "8000:8000"

  nginx:
    container_name: nginx
    ports:
      - '80:8080'
      - '443:8443'
    volumes:
      - ./logs/nginx/:/var/log/nginx/
      #      - ./config/nginx/:/etc/nginx/conf.d/
     #- /var/log/docker/nginx/modsec.log:/var/log/modsec.log
     # - ./config/modsecurity/:/etc/nginx/modsecurity.d/
    environment:
      - PORT=8080
      - BACKEND=http://webapp:8000
      - ACCESSLOG=/var/log/nginx/access.log
      - ERRORLOG=/var/log/nginx/error.log
      - PROXY_PRESERVE_HOST=on
      - PROXY_SSL=off
        #     - SERVER_ADMIN=admin@example.com
        #      - LOGLEVEL=warn
        #      - MODSEC_AUDIT_LOG_FORMAT=Native
        #      - PROXY=1
#      - MODSEC_AUDIT_ENGINE=On
      - MODSEC_RULE_ENGINE=DetectionOnly
      - MODSEC_AUDIT_LOG_PARTS=ABCFKHE
      - MODSEC_AUDIT_LOG=/var/log/nginx/modsec.log
      - MODSEC_RESP_BODY_LIMIT=512
    restart: always
    image: owasp/modsecurity-crs:nginx-alpine
    networks:
      - webapp
    depends_on:
      - webapp

#  nginx:
#    image: nginx:1.19.0-alpine
#    container_name: nginx
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - ./nginx.conf:/etc/nginx/conf.d/default.conf
#      - /var/log/nginx/:/var/log/nginx/
#    depends_on:
#      - webapp
#    networks:
#      - webapp
#    restart: always

networks:
  webapp:
    external: true
    driver: bridge
